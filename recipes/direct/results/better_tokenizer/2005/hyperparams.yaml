# Generated 2023-07-11 from:
# /home/kryo/Desktop/FinalProject_TrainingLab914/recipes/direct/hparams/train_v1f.yaml
# yamllint disable
# ############################################################################
# Model: Direct SLU
# Encoder: Pre-trained ASR encoder
# Decoder: Transformer + beamsearch
# Tokens: BPE with unigram
# losses: NLL
# Training: SLURP
# ############################################################################

working_dir: /home/kryo/Desktop/FinalProject_TrainingLab914/datasets/working

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 2005
__set_seed: !apply:torch.manual_seed [2005]

output_folder: results/better_tokenizer/2005
save_folder: results/better_tokenizer/2005/save
train_log: results/better_tokenizer/2005/train_log.txt
log_folder: results/better_tokenizer/2005/log

# Data directory
data_folder: /home/kryo/Desktop/FinalProject_TrainingLab914/datasets/slurp/audio
data_folder_rirs: /home/kryo/Desktop/FinalProject_TrainingLab914/datasets/slurp/audio
train_splits: [train_synthetic, train_real]
tokenizer_file: https://www.dropbox.com/s/tmwq12r5vgcsif9/58_unigram.model?dl=1
skip_prep: true

# Prepare csv
# original csv
o_csv_train: results/better_tokenizer/2005/train-type=direct.csv
o_csv_valid: results/better_tokenizer/2005/devel-type=direct.csv
o_csv_test: results/better_tokenizer/2005/test-type=direct.csv
# Data sampling strategy
sampling:
  files:
  - results/better_tokenizer/2005/train-type=direct.csv
  - results/better_tokenizer/2005/devel-type=direct.csv
  - results/better_tokenizer/2005/test-type=direct.csv
  strategies:
    stratified_sampling:
      selection_rate: 0.2
      by: intent
# Load csv
csv_train: results/better_tokenizer/2005/train-type=direct-sample=0.2.csv
csv_valid: results/better_tokenizer/2005/devel-type=direct-sample=0.2.csv
csv_test: results/better_tokenizer/2005/test-type=direct.csv

# Training parameters
number_of_epochs: 20
batch_size: 16
lr: 0.0003
# token_type: unigram # ["unigram", "bpe", "char"]
sorting: random
ckpt_interval_minutes: 15 # save checkpoint every N min

# Model parameters
sample_rate: 16000
#emb_size: 128
dec_neurons: 512
output_neurons: 58 # index(eos/bos) = 0
ASR_encoder_dim: 512
#encoder_dim: 256

# Decoding parameters
bos_index: 0
eos_index: 0
min_decode_ratio: 0.0
max_decode_ratio: 10.0
slu_beam_size: 80
eos_threshold: 1.5
temperature: 1.25

# Training prepare
dataloader_opts:
  batch_size: 16
  shuffle: true
epoch_counter: &id008 !new:speechbrain.utils.epoch_loop.EpochCounter
    # ADD

  limit: 20

# Transformer
d_model: 512
nhead: 2
num_encoder_layers: 1
num_decoder_layers: 3
d_ffn: 512
transformer_dropout: 0.1
activation: &id001 !name:torch.nn.GELU
# beam_searcher
blank_index: 0
valid_beam_size: 10
test_beam_size: 80
# ================================================================
# Models
# ================================================================
asr_model: !apply:speechbrain.pretrained.EncoderDecoderASR.from_hparams
  source: speechbrain/asr-crdnn-rnnlm-librispeech
  run_opts: {device: cpu}

Transformer: &id002 !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR
                                                                                     # yamllint disable-line rule:line-length
  input_size: 512
  tgt_vocab: 58
  d_model: 512
  nhead: 2
  num_encoder_layers: 1
  num_decoder_layers: 3
  d_ffn: 512
  dropout: 0.1
  activation: *id001
  normalize_before: true

#slu_enc: !new:speechbrain.nnet.containers.Sequential
#  input_shape: [null, null, !ref <ASR_encoder_dim>]
#  lstm: !new:speechbrain.nnet.RNN.LSTM
#    input_size: !ref <ASR_encoder_dim>
#    bidirectional: True
#    hidden_size: !ref <encoder_dim>
#    num_layers: 2
#  linear: !new:speechbrain.nnet.linear.Linear
#    input_size: !ref <encoder_dim> * 2
#    n_neurons: !ref <encoder_dim>

#output_emb: !new:speechbrain.nnet.embedding.Embedding
#  num_embeddings: !ref <output_neurons>
#  embedding_dim: !ref <emb_size>

#dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
#  enc_dim: !ref <encoder_dim>
#  input_size: !ref <emb_size>
#  rnn_type: gru
#  attn_type: keyvalue
#  hidden_size: !ref <dec_neurons>
#  attn_dim: 512
#  num_layers: 3
#  scaling: 1.0
#  dropout: 0.0

seq_lin: &id003 !new:speechbrain.nnet.linear.Linear
  input_size: 512
  n_neurons: 58

env_corrupt: &id004 !new:speechbrain.lobes.augment.EnvCorrupt

  openrir_folder: /home/kryo/Desktop/FinalProject_TrainingLab914/datasets/slurp/audio
  babble_prob: 0.0
  reverb_prob: 0.0
  noise_prob: 1.0
  noise_snr_low: 0
  noise_snr_high: 15

modules:
#  asr_model: !ref <asr_model>
  Transformer: *id002
  seq_lin: *id003
  env_corrupt: *id004
model: &id006 !new:torch.nn.ModuleList
- [*id002, *id003]
tokenizer: &id005 !new:sentencepiece.SentencePieceProcessor

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
  collect_in: results/better_tokenizer/2005/save/SLURM_tokenizer
  loadables:
    tokenizer: *id005
  paths:
    tokenizer: https://www.dropbox.com/s/tmwq12r5vgcsif9/58_unigram.model?dl=1

valid_search: !new:speechbrain.decoders.S2STransformerBeamSearch
  modules: [*id002, *id003, null]
  bos_index: 0
  eos_index: 0
  blank_index: 0
  min_decode_ratio: 0.0
  max_decode_ratio: 10.0
  beam_size: 10
    # ctc_weight: !ref <ctc_weight_decode>
  temperature: 1.15
  using_eos_threshold: false
  length_normalization: true

test_search: !new:speechbrain.decoders.S2STransformerBeamSearch
  modules: [*id002, *id003, null]
  bos_index: 0
  eos_index: 0
  blank_index: 0
  min_decode_ratio: 0.0
  max_decode_ratio: 10.0
  beam_size: 10
  temperature: 1.15
#    temperature_lm: 1.15    beam_size: !ref <test_beam_size>
  using_eos_threshold: false
  length_normalization: true

#beam_searcher: !new:speechbrain.decoders.S2SRNNBeamSearcher
#  embedding: !ref <output_emb>
#  decoder: !ref <dec>
#  linear: !ref <seq_lin>
#  bos_index: !ref <bos_index>
#  eos_index: !ref <eos_index>
#  min_decode_ratio: !ref <min_decode_ratio>
#  max_decode_ratio: !ref <max_decode_ratio>
#  beam_size: !ref <slu_beam_size>
#  eos_threshold: !ref <eos_threshold>
#  temperature: !ref <temperature>
#  using_max_attn_shift: False
#  max_attn_shift: 30
#  coverage_penalty: 0.

opt_class: !name:torch.optim.Adam
  lr: 0.0003

lr_annealing: &id007 !new:speechbrain.nnet.schedulers.NewBobScheduler
  initial_value: 0.0003
  improvement_threshold: 0.0025
  annealing_factor: 0.8
  patient: 0

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: results/better_tokenizer/2005/save
  recoverables:
    model: *id006
    scheduler: *id007
    counter: *id008
augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
  sample_rate: 16000
  speeds: [95, 100, 105]

log_softmax: !new:speechbrain.nnet.activations.Softmax
  apply_log: true

seq_cost: !name:speechbrain.nnet.losses.nll_loss
  label_smoothing: 0.1

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: results/better_tokenizer/2005/train_log.txt

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
  split_tokens: true
